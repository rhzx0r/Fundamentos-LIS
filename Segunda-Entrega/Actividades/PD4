Realiza una comparación entre los modelos de calidad de McCall y Boehm, abordando aspectos como niveles de jerarquía, perspectivas del producto, factores de calidad y criterios.
Modelo de Calidad de McCall:
•	Niveles de Jerarquía: El modelo de McCall está compuesto por tres niveles de jerarquía:
i.	Características del producto: Define lo que el producto debe hacer.
ii.	Subcaracterísticas: Detalla las características principales que componen cada característica del producto.
iii.	Métricas: Son medidas específicas que se utilizan para evaluar las subcaracterísticas.
•	Perspectivas del Producto: McCall presenta una perspectiva centrada en el producto y sus características, definiendo aspectos esenciales que debe tener un software para ser considerado de calidad.
•	Factores de Calidad: McCall propone 11 factores de calidad agrupados en tres categorías:
i.	Operación: Corrección, Fiabilidad, Eficiencia, Integridad.
ii.	Revisión: Mantenibilidad, Flexibilidad, Testeabilidad.
iii.	Transición: Portabilidad, Reusabilidad, Interoperabilidad, Adaptabilidad.
•	Criterios: Estos factores de calidad sirven como criterios para evaluar la calidad del software en cada una de sus dimensiones.
Modelo de Calidad de Boehm (Modelo de Calidad del Producto de Software):
•	Niveles de Jerarquía: El modelo de Boehm se compone de cuatro niveles de jerarquía:
i.	Características del producto.
ii.	Subcaracterísticas.
iii.	Métricas.
iv.	Escenarios de uso del producto.
•	Perspectivas del Producto: Similar al modelo de McCall, se enfoca en las características del producto y cómo estas se relacionan con los escenarios de uso previstos.
•	Factores de Calidad: Boehm identifica 6 factores de calidad:
i.	Desempeño.
ii.	Fiabilidad.
iii.	Usabilidad.
iv.	Soporte.
v.	Adaptabilidad.
vi.	Portabilidad.
•	Criterios: Cada factor de calidad en el modelo de Boehm sirve como un criterio para evaluar la calidad del software en su respectivo ámbito.
Comparación:
•	Jerarquía: McCall tiene tres niveles, mientras que Boehm tiene cuatro niveles.
•	Perspectiva del Producto: Ambos modelos se centran en las características del producto y su relación con la calidad.
•	Factores de Calidad: McCall presenta 11 factores agrupados en tres categorías, mientras que Boehm presenta 6 factores, cada uno abordando aspectos clave de la calidad del software.
•	Criterios: En ambos modelos, los factores de calidad actúan como criterios para evaluar la calidad del software, pero difieren en la cantidad y enfoque de dichos factores.
En resumen, ambos modelos se centran en la calidad del producto de software, aunque difieren en la cantidad de niveles de jerarquía, factores de calidad y enfoque de los mismos.

Auditoría de Gestión de Configuración del Software
Artefacto: Pruebas de Caso de Uso sobre la Página Web
1.	Identificación y versión de las pruebas:
•	¿Existe un sistema de identificación única para cada prueba de caso de uso?
•	¿Se asignan versiones a las pruebas de manera consistente?
2.	Control de cambios en las pruebas:
•	¿Se registra quién realizó cada cambio en las pruebas?
•	¿Se documentan los cambios realizados en las pruebas y cuándo se llevaron a cabo?
3.	Historial de versiones:
•	¿Se mantiene un historial claro de las diferentes versiones de las pruebas de caso de uso?
•	¿Es posible acceder a versiones anteriores en caso de necesidad?
4.	Rastreo de errores y problemas:
•	¿Se documentan y vinculan los problemas identificados durante las pruebas con las versiones específicas de las pruebas?
Artefacto: Código Relacionado con el Proyecto
1.	Sistema de control de versiones:
•	¿Se utiliza un sistema de control de versiones (Git, SVN, etc.) para el código?
•	¿Se asignan etiquetas/versiones a los commits de manera clara?
2.	Ramas y merge:
•	¿Se utilizan ramas para desarrollar nuevas funciones o corregir errores?
•	¿Se fusionan los cambios a la rama principal de manera adecuada y documentada?
3.	Registro de cambios y comentarios en el código:
•	¿Se incluyen comentarios claros y descriptivos en los commits?
•	¿Se documentan los cambios realizados en el código?
4.	Seguridad y acceso:
•	¿Se gestionan los permisos de acceso al repositorio de código de manera segura?
Informe Detallado
En el caso de las pruebas de caso de uso sobre la página web, se observa que:
•	Se utiliza una nomenclatura para identificar las pruebas, pero no se asignan versiones de manera consistente.
•	Existe un registro de cambios, pero no se documentan de manera clara las fechas de modificación.
•	No se mantiene un historial completo de versiones anteriores.
Con respecto al código relacionado con el proyecto:
•	Se emplea un sistema de control de versiones (Git), sin embargo, las etiquetas/versiones no se asignan de forma coherente.
•	Se utilizan ramas para el desarrollo, y se fusionan los cambios a la rama principal.
•	Los comentarios en los commits son informativos, pero se puede mejorar la documentación de los cambios realizados.
